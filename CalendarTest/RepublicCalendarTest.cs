namespace CalendarTest;

public class RepublicCalendarTest {
    
    [Theory]
    [InlineData(1, 1)]
    [InlineData(2, 1)]
    [InlineData(354, 1)]
    [InlineData(355, 1)]
    [InlineData(356, 2)]
    [InlineData(357, 2)]
    [InlineData(731, 2)]
    [InlineData(732, 2)]
    [InlineData(733, 3)]
    [InlineData(734, 3)]
    [InlineData(1086, 3)]
    [InlineData(1087, 3)]
    [InlineData(1088, 4)]
    [InlineData(1089, 4)]
    [InlineData(1464, 4)]
    [InlineData(1465, 4)]
    [InlineData(1466, 5)]
    [InlineData(1467, 5)]
    [InlineData(1819, 5)]
    [InlineData(1820, 5)]
    [InlineData(1821, 6)]
    [InlineData(1822, 6)]
    [InlineData(2196, 6)]
    [InlineData(2197, 6)]
    [InlineData(2198, 7)]
    [InlineData(2199, 7)]
    [InlineData(2551, 7)]
    [InlineData(2552, 7)]
    [InlineData(2553, 8)]
    [InlineData(2554, 8)]
    [InlineData(2929, 8)]
    [InlineData(2930, 8)]
    [InlineData(2931, 9)]
    [InlineData(2932, 9)]
    [InlineData(3284, 9)]
    [InlineData(3285, 9)]
    [InlineData(3286, 10)]
    [InlineData(3287, 10)]
    [InlineData(3661, 10)]
    [InlineData(3662, 10)]
    [InlineData(3663, 11)]
    [InlineData(3664, 11)]
    [InlineData(4016, 11)]
    [InlineData(4017, 11)]
    [InlineData(4018, 12)]
    [InlineData(4019, 12)]
    [InlineData(4394, 12)]
    [InlineData(4395, 12)]
    [InlineData(4396, 13)]
    [InlineData(4397, 13)]
    [InlineData(4749, 13)]
    [InlineData(4750, 13)]
    [InlineData(4751, 14)]
    [InlineData(4752, 14)]
    [InlineData(5126, 14)]
    [InlineData(5127, 14)]
    [InlineData(5128, 15)]
    [InlineData(5129, 15)]
    [InlineData(5481, 15)]
    [InlineData(5482, 15)]
    [InlineData(5483, 16)]
    [InlineData(5484, 16)]
    [InlineData(5859, 16)]
    [InlineData(5860, 16)]
    [InlineData(5861, 17)]
    [InlineData(5862, 17)]
    [InlineData(6214, 17)]
    [InlineData(6215, 17)]
    [InlineData(6216, 18)]
    [InlineData(6217, 18)]
    [InlineData(6591, 18)]
    [InlineData(6592, 18)]
    [InlineData(6593, 19)]
    [InlineData(6594, 19)]
    [InlineData(6946, 19)]
    [InlineData(6947, 19)]
    [InlineData(6948, 20)]
    [InlineData(6949, 20)]
    [InlineData(7323, 20)]
    [InlineData(7324, 20)]
    [InlineData(7325, 21)]
    [InlineData(7326, 21)]
    [InlineData(7678, 21)]
    [InlineData(7679, 21)]
    [InlineData(7680, 22)]
    [InlineData(7681, 22)]
    [InlineData(8055, 22)]
    [InlineData(8056, 22)]
    [InlineData(8057, 23)]
    [InlineData(8058, 23)]
    [InlineData(8410, 23)]
    [InlineData(8411, 23)]
    [InlineData(8412, 24)]
    [InlineData(8413, 24)]
    [InlineData(8765, 24)]
    [InlineData(8766, 24)]
    public void CalendarYear_24YearCycle(uint dayNumber, uint yearNumber)
    {
        new RepublicCalendar(dayNumber).Year.Should().Be(yearNumber);
    }

    [Theory]
    [InlineData(1, 1)]
    [InlineData(8766+1, 25)]
    [InlineData(8766*2, 48)]
    [InlineData(8766*2 + 1, 49)]
    public void CalendarYear_Several24YearCycles(uint dayNumber, uint yearNumber)
    {
        new RepublicCalendar(dayNumber).Year.Should().Be(yearNumber);
    }

    [Theory]
    [InlineData(1, 1)]
    [InlineData(2, 2)]
    [InlineData(354, 354)]
    [InlineData(355, 355)]
    [InlineData(356, 1)]
    [InlineData(357, 2)]
    [InlineData(731, 376)]
    [InlineData(732, 377)]
    [InlineData(733, 1)]
    [InlineData(734, 2)]
    [InlineData(1086, 354)]
    [InlineData(1087, 355)]
    [InlineData(1088, 1)]
    [InlineData(1089, 2)]
    [InlineData(1464, 377)]
    [InlineData(1465, 378)]
    [InlineData(1466, 1)]
    [InlineData(1467, 2)]
    [InlineData(1819, 354)]
    [InlineData(1820, 355)]
    [InlineData(1821, 1)]
    [InlineData(1822, 2)]
    [InlineData(2196, 376)]
    [InlineData(2197, 377)]
    [InlineData(2198, 1)]
    [InlineData(2199, 2)]
    [InlineData(2551, 354)]
    [InlineData(2552, 355)]
    [InlineData(2553, 1)]
    [InlineData(2554, 2)]
    [InlineData(2929, 377)]
    [InlineData(2930, 378)]
    [InlineData(2931, 1)]
    [InlineData(2932, 2)]
    [InlineData(3284, 354)]
    [InlineData(3285, 355)]
    [InlineData(3286, 1)]
    [InlineData(3287, 2)]
    [InlineData(3661, 376)]
    [InlineData(3662, 377)]
    [InlineData(3663, 1)]
    [InlineData(3664, 2)]
    [InlineData(4016, 354)]
    [InlineData(4017, 355)]
    [InlineData(4018, 1)]
    [InlineData(4019, 2)]
    [InlineData(4394, 377)]
    [InlineData(4395, 378)]
    [InlineData(4396, 1)]
    [InlineData(4397, 2)]
    [InlineData(4749, 354)]
    [InlineData(4750, 355)]
    [InlineData(4751, 1)]
    [InlineData(4752, 2)]
    [InlineData(5126, 376)]
    [InlineData(5127, 377)]
    [InlineData(5128, 1)]
    [InlineData(5129, 2)]
    [InlineData(5481, 354)]
    [InlineData(5482, 355)]
    [InlineData(5483, 1)]
    [InlineData(5484, 2)]
    [InlineData(5859, 377)]
    [InlineData(5860, 378)]
    [InlineData(5861, 1)]
    [InlineData(5862, 2)]
    [InlineData(6214, 354)]
    [InlineData(6215, 355)]
    [InlineData(6216, 1)]
    [InlineData(6217, 2)]
    [InlineData(6591, 376)]
    [InlineData(6592, 377)]
    [InlineData(6593, 1)]
    [InlineData(6594, 2)]
    [InlineData(6946, 354)]
    [InlineData(6947, 355)]
    [InlineData(6948, 1)]
    [InlineData(6949, 2)]
    [InlineData(7323, 376)]
    [InlineData(7324, 377)]
    [InlineData(7325, 1)]
    [InlineData(7326, 2)]
    [InlineData(7678, 354)]
    [InlineData(7679, 355)]
    [InlineData(7680, 1)]
    [InlineData(7681, 2)]
    [InlineData(8055, 376)]
    [InlineData(8056, 377)]
    [InlineData(8057, 1)]
    [InlineData(8058, 2)]
    [InlineData(8410, 354)]
    [InlineData(8411, 355)]
    [InlineData(8412, 1)]
    [InlineData(8413, 2)]
    [InlineData(8765, 354)]
    [InlineData(8766, 355)]
    public void CalendarDayInYear_In24YearCycle(uint dayNumber, uint dayInYearNumber)
    {
        new RepublicCalendar(dayNumber).DayInYear.Should().Be(dayInYearNumber);
    }

    [Theory]
    [InlineData(1, 1)]
    [InlineData(8766+1, 1)]
    [InlineData(8766+2, 2)]
    [InlineData(8766+355, 355)]
    [InlineData(8766+356, 1)]
    [InlineData(8766*2+1, 1)]
    [InlineData(8766*2+2, 2)]
    [InlineData(8766*2+355, 355)]
    [InlineData(8766*2+356, 1)]
    public void CalendarDayInYear_Several24YearCycles(uint dayNumber, uint dayInYearNumber)
    {
        new RepublicCalendar(dayNumber).DayInYear.Should().Be(dayInYearNumber);
    }
    
    [Theory]
    [InlineData(1, 1)]
    [InlineData(2, 1)]
    [InlineData(30, 1)]
    [InlineData(31, 1)]
    [InlineData(32, 2)]
    [InlineData(33, 2)]
    [InlineData(59, 2)]
    [InlineData(60, 2)]
    [InlineData(61, 3)]
    [InlineData(62, 3)]
    [InlineData(90, 3)]
    [InlineData(91, 3)]
    [InlineData(92, 4)]
    [InlineData(93, 4)]
    [InlineData(119, 4)]
    [InlineData(120, 4)]
    [InlineData(121, 5)]
    [InlineData(122, 5)]
    [InlineData(150, 5)]
    [InlineData(151, 5)]
    [InlineData(152, 6)]
    [InlineData(153, 6)]
    [InlineData(179, 6)]
    [InlineData(180, 6)]
    [InlineData(181, 7)]
    [InlineData(182, 7)]
    [InlineData(208, 7)]
    [InlineData(209, 7)]
    [InlineData(210, 8)]
    [InlineData(211, 8)]
    [InlineData(239, 8)]
    [InlineData(240, 8)]
    [InlineData(241, 9)]
    [InlineData(242, 9)]
    [InlineData(268, 9)]
    [InlineData(269, 9)]
    [InlineData(270, 10)]
    [InlineData(271, 10)]
    [InlineData(297, 10)]
    [InlineData(298, 10)]
    [InlineData(299, 11)]
    [InlineData(300, 11)]
    [InlineData(326, 11)]
    [InlineData(327, 11)]
    [InlineData(328, 12)]
    [InlineData(329, 12)]
    [InlineData(354, 12)]
    [InlineData(355, 12)]
    public void CalendarMonth_InNormalYear(uint dayNumber, uint month) {
        new RepublicCalendar(dayNumber).Month.Should().Be(month);
    }
        
    [Theory]
    [InlineData(355 + 1, 1)]
    [InlineData(355 + 2, 1)]
    [InlineData(355 + 30, 1)]
    [InlineData(355 + 31, 1)]
    [InlineData(355 + 32, 2)]
    [InlineData(355 + 33, 2)]
    [InlineData(355 + 59, 2)]
    [InlineData(355 + 60, 2)]
    [InlineData(355 + 61, 3)]
    [InlineData(355 + 62, 3)]
    [InlineData(355 + 90, 3)]
    [InlineData(355 + 91, 3)]
    [InlineData(355 + 92, 4)]
    [InlineData(355 + 93, 4)]
    [InlineData(355 + 119, 4)]
    [InlineData(355 + 120, 4)]
    [InlineData(355 + 121, 5)]
    [InlineData(355 + 122, 5)]
    [InlineData(355 + 150, 5)]
    [InlineData(355 + 151, 5)]
    [InlineData(355 + 152, 6)]
    [InlineData(355 + 153, 6)]
    [InlineData(355 + 179, 6)]
    [InlineData(355 + 180, 6)]
    [InlineData(355 + 181, 7)]
    [InlineData(355 + 182, 7)]
    [InlineData(355 + 208, 7)]
    [InlineData(355 + 209, 7)]
    [InlineData(355 + 210, 8)]
    [InlineData(355 + 211, 8)]
    [InlineData(355 + 239, 8)]
    [InlineData(355 + 240, 8)]
    [InlineData(355 + 241, 9)]
    [InlineData(355 + 242, 9)]
    [InlineData(355 + 268, 9)]
    [InlineData(355 + 269, 9)]
    [InlineData(355 + 270, 10)]
    [InlineData(355 + 271, 10)]
    [InlineData(355 + 297, 10)]
    [InlineData(355 + 298, 10)]
    [InlineData(355 + 299, 11)]
    [InlineData(355 + 300, 11)]
    [InlineData(355 + 326, 11)]
    [InlineData(355 + 327, 11)]
    [InlineData(355 + 328, 12)]
    [InlineData(355 + 329, 12)]
    [InlineData(355 + 349, 12)]
    [InlineData(355 + 350, 12)]
    [InlineData(355 + 351, 13)]
    [InlineData(355 + 352, 13)]
    [InlineData(355 + 376, 13)]
    [InlineData(355 + 377, 13)]
    public void CalendarMonth_InLeapYear(uint dayNumber, uint month) {
        new RepublicCalendar(dayNumber).Month.Should().Be(month);
    }

    [Theory]
    [InlineData(1087 + 1, 1)]
    [InlineData(1087 + 2, 1)]
    [InlineData(1087 + 30, 1)]
    [InlineData(1087 + 31, 1)]
    [InlineData(1087 + 32, 2)]
    [InlineData(1087 + 33, 2)]
    [InlineData(1087 + 59, 2)]
    [InlineData(1087 + 60, 2)]
    [InlineData(1087 + 61, 3)]
    [InlineData(1087 + 62, 3)]
    [InlineData(1087 + 90, 3)]
    [InlineData(1087 + 91, 3)]
    [InlineData(1087 + 92, 4)]
    [InlineData(1087 + 93, 4)]
    [InlineData(1087 + 119, 4)]
    [InlineData(1087 + 120, 4)]
    [InlineData(1087 + 121, 5)]
    [InlineData(1087 + 122, 5)]
    [InlineData(1087 + 150, 5)]
    [InlineData(1087 + 151, 5)]
    [InlineData(1087 + 152, 6)]
    [InlineData(1087 + 153, 6)]
    [InlineData(1087 + 179, 6)]
    [InlineData(1087 + 180, 6)]
    [InlineData(1087 + 181, 7)]
    [InlineData(1087 + 182, 7)]
    [InlineData(1087 + 208, 7)]
    [InlineData(1087 + 209, 7)]
    [InlineData(1087 + 210, 8)]
    [InlineData(1087 + 211, 8)]
    [InlineData(1087 + 239, 8)]
    [InlineData(1087 + 240, 8)]
    [InlineData(1087 + 241, 9)]
    [InlineData(1087 + 242, 9)]
    [InlineData(1087 + 268, 9)]
    [InlineData(1087 + 269, 9)]
    [InlineData(1087 + 270, 10)]
    [InlineData(1087 + 271, 10)]
    [InlineData(1087 + 297, 10)]
    [InlineData(1087 + 298, 10)]
    [InlineData(1087 + 299, 11)]
    [InlineData(1087 + 300, 11)]
    [InlineData(1087 + 326, 11)]
    [InlineData(1087 + 327, 11)]
    [InlineData(1087 + 328, 12)]
    [InlineData(1087 + 329, 12)]
    [InlineData(1087 + 349, 12)]
    [InlineData(1087 + 350, 12)]
    [InlineData(1087 + 351, 13)]
    [InlineData(1087 + 352, 13)]
    [InlineData(1087 + 377, 13)]
    [InlineData(1087 + 378, 13)]
    public void CalendarMonth_InLongLeapYear(uint dayNumber, uint month) {
        new RepublicCalendar(dayNumber).Month.Should().Be(month);
    }

}